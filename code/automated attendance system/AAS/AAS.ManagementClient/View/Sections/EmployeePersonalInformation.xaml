<UserControl x:Class="AAS.ManagementClient.Sections.EmployeePersonalInformation"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" d:DesignWidth="1024" Background="White" Height="719"
             xmlns:e="clr-namespace:AAS.ManagementClient.ViewModel"
             xmlns:c="clr-namespace:AAS.GUI.Converters;assembly=AAS.GUI"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:ae="clr-namespace:AAS.Entities;assembly=AAS.Entities"
             DataContext="{Binding Source={StaticResource Locator},Path=EmployeeViewModel}"
             >
    <UserControl.Resources>
        
        <ControlTemplate x:Key="resetButton" >
            <Border Background="Transparent" Height="50" Width="50">

                <Button  Panel.ZIndex="100" BorderBrush="Red" Style="{StaticResource Button}"  Height="50" Width="50" 
                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                         >
                    <Button.Content>
                        <Path  IsHitTestVisible="True" Stretch="Uniform" UseLayoutRounding="False" Fill="Black" Data="F1 M 20.8105,7.09424L 24.2607,33.1177L 15.9209,29.6714C 14.2021,33.7583 13.251,38.2466 13.251,42.9595C 13.251,61.9429 28.6406,77.3267 47.6201,77.3267C 53.2109,77.3267 58.4854,75.9829 63.1504,73.6147L 69.4775,79.9419C 63.0732,83.7349 55.6025,85.9204 47.6201,85.9204C 23.8936,85.9204 4.6582,66.688 4.6582,42.9595C 4.6582,37.0845 5.84277,31.4888 7.98047,26.3901L 0,23.0913L 20.8105,7.09424 Z M 47.6191,0.000488281C 71.3457,0.000488281 90.5791,19.2368 90.5791,42.9604C 90.5791,47.8813 89.748,52.6089 88.2227,57.0112L 96.0176,60.3472L 75.0029,76.0845L 71.8828,50.0181L 80.2969,53.6187C 81.3936,50.2642 81.9883,46.6821 81.9883,42.9604C 81.9883,23.9771 66.5986,8.59326 47.6191,8.59326C 43.3438,8.59326 39.2559,9.38037 35.4814,10.8052L 28.9404,4.26318C 34.5898,1.53076 40.9238,0.000488281 47.6191,0.000488281 Z " RenderTransformOrigin="0.5,0.5" Stroke="#FFB81A1A">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                            <Path.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="Black"/>
                                                <SplineColorKeyFrame KeyTime="0:0:0:0.5" Value="Green"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0:0.5" Value="360"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Path.Triggers>
                        </Path>
                    </Button.Content>

                </Button>
            </Border>
        </ControlTemplate>
        <ObjectDataProvider x:Key="Genders" 
                        MethodName="GetNames" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="ae:Gender" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>

    <Canvas Height="605" FlowDirection="RightToLeft">
        <!--<Button Template="{StaticResource resetButton}" Panel.ZIndex="100" Padding="0"  Canvas.Left="364" BorderBrush="Transparent" Canvas.Top="-72" Style="{StaticResource Button}" Command="{Binding Path=ResetCommand}" Height="50" Width="50"  />-->
        <StackPanel Orientation="Horizontal">
            <StackPanel Orientation="Vertical" HorizontalAlignment="Right" VerticalAlignment="Top">
                <WrapPanel Visibility="{Binding EditMode,Converter={c:BooleanToVisiblityConverter},ConverterParameter=Inverse}">
                    <TextBlock Margin="10,0,0,0" Text="{DynamicResource EmployeeID}" Style="{StaticResource LabelBlock}" />
                    <TextBlock Margin="10,0,0,0" Text="{Binding EmployeeID}" Style="{StaticResource LabelBlock}" />
                </WrapPanel>
                <WrapPanel Visibility="{Binding EditMode,Converter={c:BooleanToVisiblityConverter},ConverterParameter=Inverse}">
                    <TextBlock Margin="10,0,0,0" Text="{DynamicResource DateOfEmployement}" Style="{StaticResource LabelBlock}" />
                    <TextBlock Margin="10,0,0,0" Text="{Binding DateOfEmployement,Converter={c:GregorianToJalaliConverter}}" Style="{StaticResource LabelBlock}" />
                </WrapPanel>
                <WrapPanel>
                    <TextBlock Margin="10,0,0,0" Text="{DynamicResource FirstName}" Style="{StaticResource LabelBlock}" />
                    <TextBox Margin="10"
                                 Style="{StaticResource TextBox}" 
                                 Text="{Binding Path=FirstName, UpdateSourceTrigger=Explicit,  ValidatesOnNotifyDataErrors=True,ValidatesOnDataErrors=True}" 
                                 Tag="{Binding Path=Text,RelativeSource={RelativeSource Self},UpdateSourceTrigger=PropertyChanged}"
                                 Validation.ErrorTemplate="{StaticResource TextFieldErrorTemplate}"
                                 IsReadOnly="{Binding EditMode,Converter={c:InverseBooleanConverter}}"
                            
                                 >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <i:InvokeCommandAction Command="{Binding ExplicitValidationCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </WrapPanel>
                <WrapPanel>
                    <TextBlock Margin="10,0,0,0" Text="{DynamicResource LastName}" Style="{StaticResource LabelBlock}" />
                    <TextBox Margin="10"
                                 Style="{StaticResource TextBox}" 
                                 Text="{Binding Path=LastName, UpdateSourceTrigger=Explicit,  ValidatesOnNotifyDataErrors=True,ValidatesOnDataErrors=True}" 
                                 Tag="{Binding Path=Text,RelativeSource={RelativeSource Self},UpdateSourceTrigger=PropertyChanged}"
                                 Validation.ErrorTemplate="{StaticResource TextFieldErrorTemplate}"
                                 IsReadOnly="{Binding EditMode,Converter={c:InverseBooleanConverter}}"
                            
                                 >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <i:InvokeCommandAction Command="{Binding ExplicitValidationCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </WrapPanel>
                <WrapPanel>
                    <TextBlock Margin="10,0,0,0" Text="{DynamicResource IdentityNumber}" Style="{StaticResource LabelBlock}" />
                    <TextBox Margin="10"
                                 Style="{StaticResource TextBox}" 
                                 Text="{Binding Path=IdentityNumber, UpdateSourceTrigger=Explicit,  ValidatesOnNotifyDataErrors=True,ValidatesOnDataErrors=True}" 
                                 Tag="{Binding Path=Text,RelativeSource={RelativeSource Self},UpdateSourceTrigger=PropertyChanged}"
                                 Validation.ErrorTemplate="{StaticResource TextFieldErrorTemplate}"
                                 IsReadOnly="{Binding EditMode,Converter={c:InverseBooleanConverter}}"
                            
                                 >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <i:InvokeCommandAction Command="{Binding ExplicitValidationCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </WrapPanel>
                <!--<uc:TextField Width="Auto" Label="{StaticResource Gender}"  Margin="0,0,5,0" Value="{Binding Path=Gender,ValidatesOnNotifyDataErrors=True}" EditMode="{Binding Path=EditMode}" Validation.ErrorTemplate="{StaticResource TextFieldErrorTemplate}"  />-->

                <WrapPanel>
                    <TextBlock Margin="10,0,0,0" Text="{DynamicResource Gender}" Style="{StaticResource LabelBlock}" />
                    <ComboBox Margin="10"
                                 Style="{StaticResource Control}" 
                                 Validation.ErrorTemplate="{StaticResource TextFieldErrorTemplate}"
                                 IsEnabled="{Binding EditMode}"
                                 SelectedItem="{Binding Path=Gender}"
                                 ItemsSource="{Binding Source={StaticResource Genders}}"
                                  Text="{Binding Path=Gender}"
                                 >
                    </ComboBox>
                </WrapPanel>
                <WrapPanel>
                    <TextBlock Margin="10,0,0,0" Text="{DynamicResource DateOfBirth}" Style="{StaticResource LabelBlock}" />
                    <DatePicker 
                                 Margin="10"
                                
                                 Style="{StaticResource Control}" 
                                 Text="{Binding Path=DateOfBirth,StringFormat=\{0:yyyy-MM-dd\}}"
                                 SelectedDate="{Binding Path=DateOfBirth,StringFormat=\{0:yyyy-MM-dd\}, UpdateSourceTrigger=LostFocus,Converter={c:GregorianToJalaliConverter}, ValidatesOnNotifyDataErrors=True,ValidatesOnDataErrors=True}" 
                                 Validation.ErrorTemplate="{StaticResource TextFieldErrorTemplate}"
                                 IsEnabled="{Binding EditMode}">
                    </DatePicker>
                </WrapPanel>

                <WrapPanel>
                    <TextBlock Margin="10,0,0,0" Text="{DynamicResource NationalID}" Style="{StaticResource LabelBlock}" />
                    <TextBox Margin="10"
                                 Style="{StaticResource TextBox}" 
                                 Text="{Binding Path=NationalID,Converter={c:IRNationalIDToStringConverter}, UpdateSourceTrigger=Explicit,  ValidatesOnNotifyDataErrors=True,ValidatesOnDataErrors=True}" 
                                 Tag="{Binding Path=Text,RelativeSource={RelativeSource Self},UpdateSourceTrigger=PropertyChanged}"
                                 Validation.ErrorTemplate="{StaticResource TextFieldErrorTemplate}"
                                 IsReadOnly="{Binding EditMode,Converter={c:InverseBooleanConverter}}"
                            
                                 >

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <i:InvokeCommandAction Command="{Binding ExplicitValidationCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </WrapPanel>
            </StackPanel>
            <Button Command="{Binding Path=SetProfilePictureCommand}" Background="Transparent" Cursor="Hand" Height="325" Width="325" Margin="50" IsEnabled="{Binding EditMode}"  >
                <Canvas>
                    <TextBlock  Text="انتخاب عکس پرسنلی" Foreground="#FF666666" TextAlignment="Center"
                                FontFamily="B Koodak" FontSize="40" Canvas.Left="-140" Canvas.Top="-35"  
                                IsEnabled="{Binding EditMode}" 
                                Visibility="{Binding HasRecord,Converter={c:BooleanToVisiblityConverter},ConverterParameter=Inverse}"
                                />
                    <Image Source="{Binding ProfilePicture, Converter={c:BitmapToBitmapSourceConverter},Mode=TwoWay}"  
                           
                           Height="300" Width="300"  HorizontalAlignment="Center" VerticalAlignment="Center"
                           Validation.ErrorTemplate="{StaticResource PictureBoxErrorTemplate}" Canvas.Left="-151" Canvas.Top="-150"/>
                </Canvas>
            </Button>
        </StackPanel>
    </Canvas>

</UserControl>
